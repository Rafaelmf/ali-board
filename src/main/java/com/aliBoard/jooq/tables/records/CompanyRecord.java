/*
 * This file is generated by jOOQ.
 */
package com.aliBoard.jooq.tables.records;


import com.aliBoard.jooq.tables.Company;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyRecord extends UpdatableRecordImpl<CompanyRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.company.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.company.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.company.cnpj</code>.
     */
    public void setCnpj(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.company.cnpj</code>.
     */
    public String getCnpj() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.company.razao_social</code>.
     */
    public void setRazaoSocial(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.company.razao_social</code>.
     */
    public String getRazaoSocial() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.company.uf</code>.
     */
    public void setUf(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.company.uf</code>.
     */
    public String getUf() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Company.COMPANY.ID;
    }

    @Override
    public Field<String> field2() {
        return Company.COMPANY.CNPJ;
    }

    @Override
    public Field<String> field3() {
        return Company.COMPANY.RAZAO_SOCIAL;
    }

    @Override
    public Field<String> field4() {
        return Company.COMPANY.UF;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCnpj();
    }

    @Override
    public String component3() {
        return getRazaoSocial();
    }

    @Override
    public String component4() {
        return getUf();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCnpj();
    }

    @Override
    public String value3() {
        return getRazaoSocial();
    }

    @Override
    public String value4() {
        return getUf();
    }

    @Override
    public CompanyRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CompanyRecord value2(String value) {
        setCnpj(value);
        return this;
    }

    @Override
    public CompanyRecord value3(String value) {
        setRazaoSocial(value);
        return this;
    }

    @Override
    public CompanyRecord value4(String value) {
        setUf(value);
        return this;
    }

    @Override
    public CompanyRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompanyRecord
     */
    public CompanyRecord() {
        super(Company.COMPANY);
    }

    /**
     * Create a detached, initialised CompanyRecord
     */
    public CompanyRecord(Integer id, String cnpj, String razaoSocial, String uf) {
        super(Company.COMPANY);

        setId(id);
        setCnpj(cnpj);
        setRazaoSocial(razaoSocial);
        setUf(uf);
    }
}
